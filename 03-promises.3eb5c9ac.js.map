{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBAEpCC,EAAYF,SAASC,cAAc,iBAEnCE,EAAcH,SAASC,cAAc,mBAErCG,EAAYJ,SAASC,cAAc,mBAEzC,IAAII,EAAW,EAEXC,EAAU,EAEVC,EAAY,EA0ChBR,EAAWS,iBAAiB,SAxC5B,SAAqBC,GAEnB,OADAJ,EAAWI,EAAIC,cAAcC,MACtBN,KAwCTH,EAAUM,iBAAiB,SArC3B,SAAoBC,GAElB,OADAH,EAAUG,EAAIC,cAAcC,MACrBL,KAqCTH,EAAYK,iBAAiB,SAlC7B,SAAsBC,GAEpB,OADAF,EAAYE,EAAIC,cAAcC,MACvBJ,KAkCTH,EAAUI,iBAAiB,SA/B3B,SAAsBC,GACpBA,EAAIG,iBACJ,IAAIC,EAAQC,OAAOT,GACfU,EAAOD,OAAOR,GAClBU,OAAST,EAET,IAAIU,EAAW,EAEf,MAAMC,EAAQC,aAAY,WACxB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCL,GAAY,EACRA,EAAW,IACbJ,EAAQI,EAAWF,EAAOD,OAAOT,GAAYU,GAE3CK,EACFG,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBR,QAAiBJ,OAE9DU,EAAA1B,GAAS2B,OAAOE,QAAQ,sBAAoBT,QAAiBJ,OAE3DI,GAAYD,QACdW,cAAcT,KAEfL","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector('[name=\"delay\"]');\n\nconst inputStep = document.querySelector('[name=\"step\"]');\n\nconst inputAmount = document.querySelector('[name=\"amount\"]');\n\nconst butSubmit = document.querySelector('[type=\"submit\"]');\n\nlet inpDelay = 0;\n\nlet inpStep = 0;\n\nlet inpAmount = 0;\n\nfunction createDelay(evt) {\n  inpDelay = evt.currentTarget.value;\n  return inpDelay;\n}\n\nfunction createStep(evt) {\n  inpStep = evt.currentTarget.value;\n  return inpStep;\n}\n\nfunction createAmount(evt) {\n  inpAmount = evt.currentTarget.value;\n  return inpAmount;\n}\n\nfunction createSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(inpDelay);\n  let step = Number(inpStep);\n  amount = inpAmount;\n\n  let position = 0;\n\n  const timer = setInterval(function createPromise() {\n    const shouldResolve = Math.random() > 0.3;\n    position += 1;\n    if (position > 1) {\n      delay = position * step + Number(inpDelay) - step;\n    }\n    if (shouldResolve) {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n    if (position >= amount) {\n      clearInterval(timer);\n    }\n  }, delay);\n}\n\ninputDelay.addEventListener('input', createDelay);\n\ninputStep.addEventListener('input', createStep);\n\ninputAmount.addEventListener('input', createAmount);\n\nbutSubmit.addEventListener('click', createSubmit);\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   })\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$butSubmit","$47d4ff9957288465$var$inpDelay","$47d4ff9957288465$var$inpStep","$47d4ff9957288465$var$inpAmount","addEventListener","evt","currentTarget","value","preventDefault","delay","Number","step","amount","position","timer","setInterval","shouldResolve","Math","random","$parcel$interopDefault","Notify","success","failure","clearInterval"],"version":3,"file":"03-promises.3eb5c9ac.js.map"}